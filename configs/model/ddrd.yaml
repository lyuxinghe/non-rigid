name: ddrd

#####################################################
# Model Architecture Parameters
#####################################################
type: point # (flow, point) Type of model
size: xS # (xs, s, ...) Architecture of DiT
in_channels: 3 # Number of input channels
learn_sigma: True # Learn sigma for diffusion
cross_atten: True # Use cross attention for diffusion
point_encoder: mlp # (mlp, pn2) Point cloud encoder architecture
feature: False # If True, encode additional features
joint_encode: False # If True, use joint encoding for point cloud feature
predict_xstart: False
model_take: joint # (joint, separate)

#####################################################
# Model-specific Dataset/Data-processing Parameters
#####################################################
# These override the dataset config.
pred_frame: anchor_center # [anchor_center, noisy_goal] frame for goal prediction
noisy_goal_scale: 0.0 # scale for simulated noisy goal error
action_context_frame: action_center # [action_center] frame for action context

#####################################################
# Dataset-specific Model Parameters
#####################################################
# These are shared and overriden by the dataset config.
pcd_scale: null # Scale range for the point clouds

#####################################################
# Model Diffusion Parameters
#####################################################
diff_train_steps: 100 # Number of diffusion steps during training
diff_inference_steps: 100 # Number of diffusion steps during inference
diff_noise_schedule: linear # (linear, cosine) Noise schedule for diffusion
diff_noise_scale: 1.0 # Scale of noise for diffusion
diff_type: gaussian
diff_translation_noise_scale: False # Scale of translation noise (in meter) for diffusion, or False for disable  
diff_rotation_noise_scale: False # scale of rotation noise (in degreee) for diffusion, or False for disable
time_based_weighting: even # (False, 'even', 'linear', 'sigmoid')

# prediction setting
# centroid_frame: choose from ["anchor", "noisy_goal", "gmm"]
# anchor    : we are using anchor mean as the centroid of prediction (aka the original TAX3D setting)
# noisy_goal: we are using noisy_goal mean, or mean(goal_pc_action) + noise, as the centroid of prediction, 
#             to train our model to be robust with GMM prediction error
pred_ref_frame: anchor 
ref_error_scale: 1.0 # Scale factor for GMM prediction error

# TODO: GMM flags